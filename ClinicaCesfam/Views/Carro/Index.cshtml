@model ClinicaCesfam.Models.RESERVA
@{
    ViewBag.Title = "Carro Page";
}
<style>
    .title {
        display: flex;
        justify-content: space-between;
    }
</style>
<div class="title">
    <h1>Pago reserva medicamento</h1>
    <h1>Nro Orden de compra: @ViewBag.buyOrder</h1>
</div>






@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.id_reserva, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.id_reserva, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.id_reserva, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cantidad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cantidad, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cantidad, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.id_paciente, "id_paciente", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("id_paciente", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.id_paciente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.id_medica, "Medicamento nombre-fabrica-gramaje ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("id_medica", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.id_medica, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="inputValue"> Valor Total: </label>
            <div class="col-md-10">
                <input type="number" class="form-control text-box single-line" name="inputValue" id="inputValue" required/>
            </div>
        </div>

        <form method="post" action="@ViewBag.url" onsubmit="return validateForm()">
            <input type="submit" value="Create" />
        </form>

        <script>
            function validateForm() {
                var inputValue = document.getElementById("inputValue").value;
                if (inputValue === "") {
                    alert("Por favor, ingrese un valor en el campo Valor Total.");
                    return false; // Evita enviar el formulario si el campo está vacío
                }
                return true; // Envía el formulario si el campo tiene un valor
            }
        </script>
    </div>
}




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}