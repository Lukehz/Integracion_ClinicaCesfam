@model ClinicaCesfam.ViewModels.MedicamentoReservaViewModel

@{
    ViewBag.Title = "PagoReserva";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1 style="text-align:center;font-family:Candara">Pago Reserva</h1>

<style>
    .jumbotron {
        
        background-image: url(https://www.alert-software.com/hs-fs/hubfs/it%20department%20hospital.png?width=1280&name=it%20department%20hospital.png);
        background-size:contain
    }
    .table-container {
        display: flex;
        justify-content:center;
        align-items: center;
        text-align: center;
    }

    table {
        background-color: white;
        display: flex;
        border-radius: 20px;
        margin: 10px;
        border-collapse: collapse;
        border-radius: 20px;
        border: 2px solid black;
        overflow: hidden;
        box-shadow: 0px 0px 50px #00ff0045;
    }

    th, td {
        border: 1px solid black;
        padding: 8px;
        text-align: center;
    }

    .form-control {
        text-align: center;
    }

    .col-md-10 {
        margin: auto;
    }
</style>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="jumbotron">
        <div class="table-container">
            <table>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <tr>
                    <th style="width:50%"><h4>MEDICAMENTO</h4></th>
                    <th style="width:50%"><h4>DATOS DE RESERVA</h4></th>
                </tr>
                <tr>
                    <td>
                        <dt>
                            Nombre Medicamento
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Medicamento.nombre_medica)
                        </dd>
                    </td>
                    <td>
                    </td>
                </tr>
                <tr>
                    <td>
                        <dt>
                            Fabricante
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Medicamento.fabricante_medica)
                        </dd>
                    </td>
                    <td>
                        <dt>
                        </dt>
                        <dd>
                        </dd>
                    </td>
                </tr>
                <tr>
                    <td>
                        <dt>
                            Gramaje
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Medicamento.gramaje_medica)
                        </dd>
                    </td>
                    <td>
                        <dt>
                            Rut del paciente
                        </dt>
                        <dd>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Reserva.id_paciente, "", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("Reserva.id_paciente", ViewBag.id_paciente as SelectList, htmlAttributes: new { @class = "form-control", id = "id_paciente" })
                                    @Html.ValidationMessageFor(model => model.Reserva.id_paciente, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </dd>
                    </td>
                </tr>
                <tr>
                    <td>
                        <dt>
                            Fecha de vencimiento
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Medicamento.exp_medica)
                        </dd>
                    <td>
                        <dt>
                            Reservante
                        </dt>
                        <dd>
                            <div class="form-control">
                                <span id="nombreApellido"></span>
                            </div>
                        </dd>
                    </td>
                </tr>
                <tr>
                    <td>
                        <dt>
                            Precio Unitario
                        </dt>
                        <dd>
                            $@Html.DisplayFor(model => model.Medicamento.Precio)
                        </dd>
                    </td>
                    <td>
                        <dt>
                            Cantidad
                        </dt>
                        <dd>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Reserva.cantidad, "", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Reserva.cantidad, new { htmlAttributes = new { @class = "form-control", id = "cantidad" } })
                                    @Html.ValidationMessageFor(model => model.Reserva.cantidad, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </dd>
                    </td>
                </tr>
                <tr>
                    <th colspan="2">
                        <dt>
                            Total a pagar
                        </dt>
                        <dd>
                            <div class="form-control">
                                $<span name="total" id="total"></span>
                            </div>
                        </dd>
                    </th>
                </tr>
                <tr>
                    <th colspan="2">
                        <form method="post" action="@ViewBag.url" onsubmit="return validateForm()">
                            <input type="hidden" name="usuarioReserva" id="usuarioReserva" />
                            <input type="hidden" id="id_medica" name="Reserva.id_medica" value="@Html.DisplayFor(model => model.Medicamento.id_medica)" />
                            <input type="hidden" name="totalHidden" id="totalHidden" />
                            <input type="submit" value="Create" class="btn btn-outline-success"/>
                        </form>
                    </th>
                </tr>
            </table>
        </div>
    </div>
}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!--
    Este archivo Javascript sirve para: multiplicar la cantidad del producto por el valor unitario, y muestra el total en tiempo real.
    tambien muestra el nombre de la persona que reserva en tiempo real, segun el rut que seleccione.
    -->
<script src="~/Scripts/TotalPagar.js"></script>


<!--
    Envia el precio unitario del medicamento    
-->
<script>
    //envia el valor del precio del medicamento al archivo js mediante variable
    var precioMedicamento = @Html.Raw(Json.Encode(Model.Medicamento.Precio));
</script>
<script>
    // Obtener el elemento <span> por su ID el id="nombreApellido"
    var nombreApellidoElement = document.getElementById("nombreApellido");

    // Obtener el campo oculto por su ID
    var usuarioReservaElement = document.getElementById("usuarioReserva");

    // Función para actualizar el nombre concatenado con el apellido
    function actualizarNombre() {
        // Obtener el valor seleccionado del DropDownList
        var id_paciente = document.getElementById("id_paciente").value;

        // Realizar una solicitud AJAX para obtener el nombre concatenado desde la base de datos
        var xhr = new XMLHttpRequest();
        // Mediante el metodo de ObtenerNombreApellido(donde se hacen los inner join correspondient para concatenar el nombre y apellido)
        // Ruta donde se consigue el nombre concatenado lo obtiene mediante "GET" y se filtra por el id_paciente 
        xhr.open("GET", "/ReservaPago/ObtenerNombreApellido?id_paciente=" + id_paciente, true);
        // funcion de "Devolucion de llamado" se ejecutara cuando cambie la solicitud del AJAX
        xhr.onreadystatechange = function () {
            //xhr.readyState: hace referencia al estado 4 significa: estado completado
            //xhr.status: hace referecia si fue exitoso o no por ejemplo: http:200(exitoso). http:404(error). http:500(eror interno servidor)
            //Si es cumple las condiciones actualiza en nombre concatenado
            if (xhr.readyState === 4 && xhr.status === 200) {
                // Actualiza el contenido del elemento <span> con el nombre concatenado
                nombreApellidoElement.textContent = xhr.responseText;

                // Actualizar el valor del campo oculto con el nombre concatenado
                usuarioReservaElement.value = xhr.responseText;
            }
        };
        //se envia la solicitud
        xhr.send();
    }

    // Llamar a la función actualizarNombre al cargar la página(para que no se pierda el nombre, para que el campo no este vacio)
    window.onload = actualizarNombre;

    // Llama a la función actualizarNombre cuando se seleccione una opción diferente en el DropDownList
    document.getElementById("id_paciente").addEventListener("change", actualizarNombre);
</script>
