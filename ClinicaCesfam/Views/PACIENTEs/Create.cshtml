@model ClinicaCesfam.Models.PACIENTE

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>PACIENTE</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.enfermedad_cronica, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("enfermedad_cronica", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.enfermedad_cronica, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nombre_enfermedad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nombre_enfermedad, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nombre_enfermedad, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.id_persona, "id_persona", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("id_persona", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.id_persona, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-outline-dark" />
                <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                    Back to List
                </a>
            </div>
        </div>
    </div>
}
@*
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<!--Bibloteca de jquery para habilitar y desabilitar campo -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        // Funcion para verificar y deshabilitar el campo nombre_enfermedad
        function verificarEnfermedadCronica() {
            var enfermedadCronica = $('#enfermedad_cronica').val();
            var nombreEnfermedad = $('#nombre_enfermedad');

            // Si el valor es 0 se
            if (enfermedadCronica === '0') {
                // Deshabilita el campo nombre_enfermedad
                nombreEnfermedad.prop('disabled', true);
            } else {
                // Habilita el campo nombre_enfermedad
                nombreEnfermedad.prop('disabled', false);
            }
        }

        // Verifica y deshabilita el campo al cargar la pagina dependiendo del valor enfermeda_cronica
        verificarEnfermedadCronica();

        // Maneja el evento change de enfermedad_cronica
        $('#enfermedad_cronica').change(function () {
            verificarEnfermedadCronica();
        });
    });
</script>
